1) BRUTE FORCE
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> freq;
        for(int num:nums){
            freq[num]++;
        }
        vector<pair<int,int>> v(freq.begin(),freq.end());

        sort(v.begin(),v.end(), [](pair<int,int>& a,pair<int,int>& b){
            return a.second>b.second;
        });
        vector<int> result;
        for(int i=0;i<k;i++){
            result.push_back(v[i].first);

        }
        return result;
    }
};

2)OPTIMIZED
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> freq;
        for(int num:nums){
            freq[num]++;
        }
        int n=nums.size();
        vector<vector<int>> bucket(n+1);
        for(auto& pair:freq){
            int num=pair.first;
            int count=pair.second;
            bucket[count].push_back(num);
        }
        vector<int> result;
        for(int i=n;i>=0 && result.size()<k;i--){
            for(int num:bucket[i]){
                result.push_back(num);
                if(result.size()==k){
                    break;
                }
            }
        }
        return result;

    }
};
