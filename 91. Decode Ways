class Solution{
public:
    int numDecodings(string s){
        int n=s.size();
        if(n==0) return 0;

        vector<int> dp(n+1,0);
        dp[0]=1;

        dp[1]=(s[0]!='0')?1:0;

        for(int i=2;i<=n;i++){
            if(s[i-1]!='0'){
                dp[i]+=dp[i-1];
            }
            int twodigit=stoi(s.substr(i-2,2));
            if(twodigit>=10 && twodigit<=26){
                dp[i]+=dp[i-2];
            }
        }
        return dp[n];
    }
};



Space optimized version:
class Solution{
public:
    int numDecodings(string s){
        if(s.empty() || s[0]=='0') return 0;
        int prev2=1,prev1=1;

        for(int i=1;i<s.size();i++){
            int curr=0;
            if(s[i]!='0') curr+=prev1;
            int twodigit=stoi(s.substr(i-1,2));
            if(twodigit>=10 && twodigit<=26) curr+=prev2;

            prev2=prev1;
            prev1=curr;
        }
        return prev1;
    }
};
