class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<tuple<int,int,int>> nodes; 
        queue<pair<TreeNode*, pair<int,int>>> q; 
        q.push({root, {0,0}});

        while(!q.empty()) {
            auto [node, pos] = q.front(); q.pop();
            int row = pos.first;
            int col = pos.second;
            nodes.push_back({col,row,node->val});

            if(node->left) q.push({node->left, {row+1, col-1}});
            if(node->right) q.push({node->right, {row+1, col+1}});
        }

        
        sort(nodes.begin(), nodes.end());

        vector<vector<int>> res;
        int lastCol = INT_MIN;
        for(auto &[col,row,val] : nodes) {
            if(col != lastCol) {
                res.push_back({});
                lastCol = col;
            }
            res.back().push_back(val);
        }
        return res;
    }
};
