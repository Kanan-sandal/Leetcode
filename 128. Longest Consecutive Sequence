1)BRUTE FORCE
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int longest=0;
        for(int num:nums){
            int currentnum=num;
            int count=1;

            while(find(nums.begin(),nums.end(),currentnum+1)!=nums.end()){
                currentnum+=1;
                count+=1;
            }
            longest=max(longest,count);
        }
        return longest;
    }
};


2)OPTIMIZED
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
       
        unordered_set<int> numset(nums.begin(),nums.end());
        int longest=0;
        for(int num:numset){
            if(!numset.count(num-1)){
                int currentnum=num;
                int count=1;
                
                while(numset.count(currentnum+1)){
                    currentnum++;
                    count++;
                }
                longest=max(longest,count);
            }
        }
        return longest;
    }
};
