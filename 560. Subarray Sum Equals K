1)BRUTE FORCE
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int count=0;
        for(int i=0;i<nums.size();++i){
            int sum=0;
            for(int j=i;j<nums.size();++j){
                sum+=nums[j];
                if(sum==k){
                    count++;
                }
            }
        }
        return count;
    }
};



2)OPTIMIZED
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        unordered_map<int,int> prefixsumfreq;
        prefixsumfreq[0]=1;
        int sum=0;
        int count=0;
        for(int num:nums){
            sum+=num;

            if(prefixsumfreq.count(sum-k)){
                count+=prefixsumfreq[sum-k];
            }
            prefixsumfreq[sum]++;
        }
        return count;
    }
};
