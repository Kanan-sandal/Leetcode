class Solution {
public:
    int solve(string& s,string& p,int n,int m){
        int j=0;
        for(int i=0;i<n;i++){
            if(s[i]==p[j]) j++;
            if(j==m) return 1;
        }
        return 0;
    }
    int numMatchingSubseq(string s, vector<string>& words) {
        int n=words.size();
        int answer=0;
        unordered_map<string,int>mp;
        for(int i=0;i<n;i++){
            if(mp.find(words[i])!=mp.end()){
                answer+=mp[words[i]];
            }else{
                mp[words[i]]=solve(s,words[i],s.length(),words[i].length());
                answer+=mp[words[i]];
            }
        }
        return answer;
    }
};
