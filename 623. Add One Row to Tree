/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        int currdepth=1;
        if(depth==1){
            TreeNode* node=new TreeNode(val);
            node->left=root;
            return node;
        }
        addRow(root,1,val,depth);
        return root;
    }
    void addRow(TreeNode* root, int currdepth,int val, int depth){
        if(root==nullptr) return ;

        
        else if(currdepth==depth-1){
            TreeNode* a=new TreeNode(val);
            TreeNode* b=new TreeNode(val);

            TreeNode* oldleft=root->left;
            TreeNode* oldright=root->right;

            root->left=a;
            root->right=b;

            a->left=oldleft;
            b->right=oldright;

            
        }else{
            addRow(root->left,currdepth+1,val,depth);
            addRow(root->right,currdepth+1,val,depth);
        }
    }
};
