#include <limits.h>
class Solution {
public:
    int reverse(int x) {
        int revnum = 0;

        while (x != 0) {
            int last = x % 10;

           
            if (revnum > INT_MAX / 10 || (revnum == INT_MAX / 10 && last > 7)) {
                return 0; 
            }
            if (revnum < INT_MIN / 10 || (revnum == INT_MIN / 10 && last < -8)) {
                return 0; 
            }

            revnum = (revnum * 10) + last;
            x /= 10;
        }

        return revnum;
    }
};



APPROACH 2:
#include <climits> 
class Solution {
public:
    int reverse(int x) {
        int revnum=0;
        while(x!=0){
            int digit=x%10;
            if(revnum>INT_MAX/10 || revnum<INT_MIN/10){
                return 0;
            }
            revnum=revnum*10+digit;
            x=x/10;
        }
        return revnum;
    }
};







class Solution {
public:
    int reverse(int x) {
        long revnum=0;
        while(x!=0){
            int last=x%10;
            revnum=(revnum*10)+last;
            x=x/10;
        }
        if(revnum>INT_MAX || revnum<INT_MIN){
            return 0;
        }
        return (int)revnum;
    }
};
