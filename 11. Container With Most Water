class Solution {
public:
    int maxArea(vector<int>& height) {
        int leftpointer=0;
        int maxwater=0;
        int rightpointer=height.size()-1;
        while(leftpointer<rightpointer){
            int width=rightpointer-leftpointer;
            int ht=min(height[rightpointer],height[leftpointer]);
            int area=width*ht;
            maxwater=max(maxwater,area);
            if(height[leftpointer]<height[rightpointer]){
                leftpointer++;
            }else{
                rightpointer--;
            }
        }
        return maxwater;
    }
};




BEST(2 POINTER ):
class Solution {
public:
    int maxArea(vector<int>& height) {
        int left=0;
        int right=height.size()-1;
        int maxarea=0;

        while(left<right){
            int h=min(height[left],height[right]);
            int width=right-left;
            maxarea=max(maxarea,h*width);

            if(height[left]<height[right]) left++;
            else right--;
        }
        return maxarea;
    }
};
