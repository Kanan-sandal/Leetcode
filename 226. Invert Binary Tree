1)BRUTE FORCE
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return nullptr;
        TreeNode* temp=root->left;
        root->left=invertTree(root->right);
        root->right=invertTree(temp);

        return root;
    }
};


2)OPTIMIZED
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return nullptr;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            TreeNode* current=q.front();q.pop();
            swap(current->left,current->right);

            if(current->left) q.push(current->left);
            if(current->right) q.push(current->right);
        }
        return root;
    }
};
