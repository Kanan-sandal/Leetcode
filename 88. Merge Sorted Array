class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int index=m+n-1;
        int i=m-1;
        int j=n-1;
        while(i>=0 && j>=0){
            if(nums1[i]>=nums2[j]){
                nums1[index]=nums1[i];
                index--;
                i--;
            }else{
                nums1[index]=nums2[j];
                index--;
                j--;
            }
        }
        while(j>=0){
            nums1[index]=nums2[j];
            index--;
            j--;
        }
    }
};



class Solution {
public:
    void merge(vector<int>& arr1, int m, vector<int>& arr2, int n) {
        int left=m-1;
        int right=0;
        while(left>=0 && right<n){
            if(arr1[left]>arr2[right]){
                swap(arr1[left],arr2[right]);
                left--;
                right++;
            }else{
                break;
            }
        }
        sort(arr1.begin(),arr1.begin()+m);
        sort(arr2.begin(),arr2.end());

        for (int i = 0; i < n; i++) {
            arr1[m + i] = arr2[i];
        }
    }
};




class Solution {
private:
    void swapifgreater(vector<int>& nums1,vector<int>& nums2,int index1,int index2){
        if(nums1[index1]>nums2[index2]){
            swap(nums1[index1],nums2[index2]);
        }
    }
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int len=n+m;
        int gap=(len/2)+(len%2);
        while(gap>0){
            int left=0;
            int right=left+gap;
            while(right<len){
                if(left<m && right>=m){
                    swapifgreater(nums1,nums2,left,right-m);
                }else if(left>=m){
                    swapifgreater(nums2,nums2,left-m,right-m);
                }else{
                    swapifgreater(nums1,nums1,left,right);
                }
                left++;
                right++;
            }
            if(gap==1) break;
            gap=(gap/2)+(gap%2);
        }
        for (int i = 0; i < n; i++) {
            nums1[m + i] = nums2[i];
        }
    }
};



class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i=m-1;
        int j=n-1;
        int k=m+n-1;
        while(i>=0 && j>=0){
            if(nums1[i]>nums2[j]){
                nums1[k--]=nums1[i--];
            }else{
                nums1[k--]=nums2[j--];
            }
        }
        while(j>=0){
            nums1[k--]=nums2[j--];
        }
    }
};
