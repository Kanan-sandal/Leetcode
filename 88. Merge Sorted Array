class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int index=m+n-1;
        int i=m-1;
        int j=n-1;
        while(i>=0 && j>=0){
            if(nums1[i]>=nums2[j]){
                nums1[index]=nums1[i];
                index--;
                i--;
            }else{
                nums1[index]=nums2[j];
                index--;
                j--;
            }
        }
        while(j>=0){
            nums1[index]=nums2[j];
            index--;
            j--;
        }
    }
};



class Solution {
public:
    void merge(vector<int>& arr1, int m, vector<int>& arr2, int n) {
        int left=m-1;
        int right=0;
        while(left>=0 && right<n){
            if(arr1[left]>arr2[right]){
                swap(arr1[left],arr2[right]);
                left--;
                right++;
            }else{
                break;
            }
        }
        sort(arr1.begin(),arr1.begin()+m);
        sort(arr2.begin(),arr2.end());

        for (int i = 0; i < n; i++) {
            arr1[m + i] = arr2[i];
        }
    }
};
